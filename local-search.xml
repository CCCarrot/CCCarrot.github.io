<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SecureNN</title>
    <link href="/2022/04/22/SecureNN/"/>
    <url>/2022/04/22/SecureNN/</url>
    
    <content type="html"><![CDATA[<p>《SecureNN: 3-Party Secure Computation for Neural NetworkTraining》-2019</p><h2 id="摘要">摘要</h2><p>在神经网络算法中包含着线性运算（如矩阵乘法、卷积运算...）以及非线性运算（ReLU、Maxpool、梯度下降...），在之前的解决方案（如SecureML等）中，通常使用算术电路来计算线性运算，使用布尔电路计算非线性运算，但是这样将会面临两种电路之间的转换以及混淆电路严重的通信开销问题。</p><p>本文提出了一种在三方辅助计算下使用的全算术电路来进行隐私保护机器学习的方案，解决了上述两个问题。</p><ul><li>Scalability：首个可以用于卷积神经网络上训练模型的隐私保护机器学习协议。</li><li>Performance：在安全预测任务中，效率优于（SecureML、MiniONN、Chameleon,、Gazelle）6×~113×（在复杂的网络中提升更多）。在安全训练任务中，分别比2-P、3-P的SecureML快79×、3×。</li><li>Security：之前的协议仅提供了半诚实的安全性保证，本文是第一个考虑到在复杂算法（如神经网络的训练和预测）任务中恶意敌手的存在的协议。</li></ul><h2 id="模型">模型</h2><p>本文将问题如下建模：M个数据的持有者希望通过N台服务器来对各自持有的数据使用深度学习的方法联合训练模型。首先，M方将其持有的数据以秘密分享的方式共享给N台服务器，然后这些服务器共同运行一个交互式的协议，在联合数据上训练神经网络，生成所需的模型。安全要求是，任何一个参与方（包括数据持有者及服务器）都不能了解任何其他方的私有数据信息。这被称为N-server模型。</p><p>本文主要考虑N=3（P0、P1、P2）的情况，M是任意的。其中，P0、P1提供输入、获取输出，P2仅提供一定的随机性及进行一些辅助计算。例如：<img src="/img/SecureNN2.png" alt="SecureNN模型" /></p><p>M个医院，持有患者的私密数据，将其秘密分享给P0、P1，然后P0、P1、P2三方执行协议，安全训练出模型，再由患者使用。</p><h2 id="技术概览">技术概览</h2><p>本文主要使用了三个环：<spanclass="math inline">\(Z_{L}、Z_{L-1}、Z_{p}\)</span>，其中，<spanclass="math inline">\(L=2^l\)</span>，p是个小素数，在本文中为67。<spanclass="math inline">\(Z_{L}、Z_{L-1}\)</span>用于对某一输入x的秘密分享，<spanclass="math inline">\(Z_{p}\)</span>用于对x中某一个比特的秘密分享，如图：<img src="/img/SecureNN3.png" alt="三个环的使用" /></p><p>论文主要设计了5个支持协议和5个核心协议，这些协议的关系如图： <imgsrc="/img/SecureNN1.png" alt="协议结构" /></p><h2 id="方案设计">方案设计</h2><h3 id="matrix-multiplication">Matrix Multiplication</h3><p>安全矩阵乘法协议，基本思想与Beaver三元组没有区别。由P2生成乘法三元组，并将其共享给P0、P1。<img src="/img/SecureNN-1.png" alt="Matrix Multiplication" /></p><h3 id="select-share">Select Share</h3><p>共享选择协议的基本要求是使用一个选择比特<spanclass="math inline">\(\alpha\)</span>来获取两个秘密分享份额x、y中的一个，当<spanclass="math inline">\(\alpha=0\)</span>时选择x，反之选择y。输出可以表示为<spanclass="math inline">\((1-\alpha)x+\alpha y=x+\alpha(y-x)\)</span>。 <imgsrc="/img/SecureNN-2.png" alt="Select Share" /></p><h3 id="private-compare">Private Compare</h3><p>本协议需要实现使用算术电路计算非线性运算，那么首先要考虑的就是ReLU函数的实现。ReLU函数的实现关键在于判断x的正负，也就是MSB(x)。通常在求MSB(x)时要做比特提取，这就要用到布尔电路，所以需要将问题进行转化。考虑到在奇数环中有MSB(a)=LSB(2a)<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><spanclass="hint--top hint--rounded"aria-label="在奇数环中，n为环的阶，MSB(a)=1→a&gt;n/2→n&gt;2a-n&gt;0→2a-n为奇数→LSB(2a-n)=1，有2a-n=2amod n，所以LSB(2a)=1。同理，当MSB(a)=0时，有LSB(2a)=0。">[1]</span></a></sup>，所以此时问题就变成了如何使用算术电路求输入的最低有效位。</p><p>P0、P1本地计算y=2a，有MSB(a)=LSB(y)=y[0]， <imgsrc="/img/SecureNN-3.png" alt="Private Compare" />先考虑算法的分支结构：</p><ol type="1"><li><span class="math inline">\(\beta=0,则\beta{}&#39;=(x&gt;r)\)</span>此时，算法使用<span class="math inline">\(\omega_{i}\)</span>来表示第i位是否相同</li></ol><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1"class="footnote-text"><span>在奇数环中，n为环的阶，MSB(a)=1→a&gt;n/2→n&gt;2a-n&gt;0→2a-n为奇数→LSB(2a-n)=1，有2a-n=2amod n，所以LSB(2a)=1。同理，当MSB(a)=0时，有LSB(2a)=0。<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>MPC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MPC</tag>
      
      <tag>密码学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TEST</title>
    <link href="/2022/04/21/TEST/"/>
    <url>/2022/04/21/TEST/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><div class="note note-success">            <p>something</p>          </div><p><span class="math display">\[E=mc^2\]</span></p>]]></content>
    
    
    <categories>
      
      <category>TEST</category>
      
    </categories>
    
    
    <tags>
      
      <tag>TEST</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
